#include "net/ipv6/multicast/secure/engine.h"
#include "net/ipv6/multicast/secure/certexch.h"

/* RSA */

// unsigned char full_rsa_der[] = { 0x30, 0x82, 0x1, 0xdc, 0x2, 0x1, 0, 0x2, 0x65, 0, 0xbb, 0xd3, 0x35, 0xd8, 0xea, 0x61, 0x62, 0x5a, 0xa4, 0xc4, 0x1d, 0x3c, 0x45, 0xf0, 0x32, 0x2c, 0xd2, 0x4e, 0xc5, 0x4, 0xd5, 0xce, 0x34, 0x19, 0x8e, 0x9c, 0x5b, 0xdc, 0xa3, 0x37, 0x4a, 0xc7, 0x20, 0x62, 0x68, 0x42, 0x72, 0xc4, 0x18, 0x13, 0x4f, 0x8a, 0x8, 0x36, 0x7, 0x3, 0x1e, 0xa, 0x7b, 0x21, 0x56, 0x9e, 0x99, 0x6b, 0xd4, 0x1a, 0xc3, 0x25, 0xc3, 0xf1, 0xa4, 0x20, 0x31, 0xea, 0x67, 0x21, 0xcf, 0xc5, 0x90, 0xfa, 0xab, 0xc, 0xc4, 0x80, 0x40, 0x79, 0x59, 0x13, 0x9c, 0x3c, 0x48, 0xbd, 0xa3, 0xc2, 0xfe, 0xaf, 0x44, 0x58, 0x6f, 0xc3, 0x40, 0xec, 0x7b, 0xd6, 0x1d, 0x44, 0x70, 0x67, 0x89, 0x4f, 0x2, 0x3, 0x1, 0, 0x1, 0x2, 0x64, 0x66, 0x2d, 0x2c, 0x29, 0xe8, 0xb7, 0x39, 0x8e, 0x1d, 0xfc, 0x21, 0xfb, 0x5c, 0, 0xa3, 0xb, 0x7, 0xd, 0x9a, 0xd8, 0x5a, 0x87, 0x66, 0x88, 0x50, 0xb0, 0x76, 0xb8, 0xbc, 0x81, 0xa3, 0xc8, 0x57, 0xb1, 0xb1, 0xe, 0x14, 0xe8, 0xe0, 0x40, 0x1, 0x11, 0x12, 0xe, 0x72, 0x1a, 0x1c, 0x9, 0x8f, 0x99, 0x50, 0x94, 0xa2, 0x63, 0x3d, 0x31, 0xb6, 0x77, 0xd5, 0xa3, 0xf0, 0xed, 0x87, 0x3a, 0x20, 0x86, 0x93, 0xf6, 0x2f, 0x64, 0x83, 0xc2, 0x51, 0x9, 0xb9, 0x70, 0xa0, 0xa7, 0xf1, 0x1c, 0x40, 0x25, 0x87, 0x83, 0x31, 0x34, 0x5a, 0xde, 0xa5, 0x1a, 0x7e, 0x2a, 0x9c, 0xc8, 0xae, 0x48, 0x61, 0x2d, 0xe1, 0x21, 0x2, 0x33, 0, 0xe2, 0xa0, 0x4, 0xaa, 0x9f, 0x61, 0xa, 0xd6, 0x4e, 0x1d, 0x1b, 0xc0, 0xa4, 0x55, 0xcf, 0xe7, 0xaa, 0xdf, 0x3e, 0x32, 0xbd, 0x4c, 0x47, 0x11, 0x8e, 0x32, 0x15, 0x95, 0x1, 0x6d, 0x5f, 0x15, 0xae, 0xc1, 0xc9, 0x6f, 0xd1, 0x57, 0x96, 0xc4, 0xd9, 0x5e, 0x19, 0x7b, 0xb8, 0x27, 0x1d, 0x5e, 0xe2, 0x25, 0x2, 0x33, 0, 0xd4, 0x2b, 0xb5, 0xfc, 0xb1, 0x41, 0xf3, 0x86, 0x34, 0x2c, 0x51, 0x54, 0xc7, 0xf9, 0x94, 0x52, 0x35, 0xb2, 0x57, 0x4c, 0xb7, 0x8f, 0xcc, 0xe0, 0x9e, 0x80, 0x2d, 0, 0x45, 0xb4, 0xc, 0x6c, 0xfe, 0x38, 0x25, 0xf1, 0x35, 0xb0, 0x56, 0xfd, 0x4a, 0x23, 0x7, 0x4f, 0x24, 0x82, 0xcd, 0xa9, 0x31, 0x63, 0x2, 0x32, 0x18, 0x70, 0xe1, 0x8f, 0xf5, 0x38, 0x66, 0xe, 0xce, 0xc5, 0xdc, 0xe4, 0x5d, 0xd4, 0xd3, 0x63, 0x4c, 0xce, 0x5e, 0xca, 0xe2, 0x17, 0x83, 0xe2, 0xa4, 0xcf, 0x49, 0xfc, 0x93, 0xf6, 0xd3, 0xb6, 0x66, 0xee, 0x87, 0x67, 0x3, 0xd0, 0xca, 0x75, 0xd8, 0x6b, 0x89, 0x9c, 0xa, 0x34, 0x4d, 0xba, 0x99, 0xf1, 0x2, 0x32, 0x28, 0x54, 0x1a, 0xa6, 0x6a, 0x66, 0xf7, 0xcb, 0xf5, 0x94, 0xca, 0xec, 0xcb, 0x8a, 0x4, 0x8, 0x50, 0x4e, 0x92, 0xcb, 0x71, 0x44, 0xb3, 0x13, 0xaa, 0xed, 0, 0x20, 0xc2, 0x1f, 0x4, 0x11, 0x9f, 0x8c, 0xba, 0xa1, 0x8b, 0xab, 0xf6, 0xc, 0xf5, 0xf, 0x8d, 0x6f, 0x1c, 0xa8, 0x84, 0x40, 0xf9, 0xb3, 0x2, 0x33, 0, 0xdf, 0x7e, 0x40, 0x34, 0xcd, 0x9a, 0xf1, 0xcd, 0x35, 0x30, 0x2, 0x55, 0xf6, 0x8b, 0x1d, 0x68, 0x5c, 0x89, 0x42, 0x4c, 0x3e, 0xa8, 0xca, 0xd3, 0x56, 0x7b, 0x6b, 0x35, 0x2d, 0x3b, 0xbe, 0x1a, 0xab, 0x61, 0x96, 0x6e, 0x31, 0xc7, 0x8c, 0x3b, 0xe2, 0xed, 0x84, 0x46, 0x94, 0x8a, 0x31, 0xdd, 0xf3, 0x5f };
// unsigned char public_rsa_e[] = { 0x1, 0, 0x1 };
// unsigned char public_rsa_n[] = { 0xbb, 0xd3, 0x35, 0xd8, 0xea, 0x61, 0x62, 0x5a, 0xa4, 0xc4, 0x1d, 0x3c, 0x45, 0xf0, 0x32, 0x2c, 0xd2, 0x4e, 0xc5, 0x4, 0xd5, 0xce, 0x34, 0x19, 0x8e, 0x9c, 0x5b, 0xdc, 0xa3, 0x37, 0x4a, 0xc7, 0x20, 0x62, 0x68, 0x42, 0x72, 0xc4, 0x18, 0x13, 0x4f, 0x8a, 0x8, 0x36, 0x7, 0x3, 0x1e, 0xa, 0x7b, 0x21, 0x56, 0x9e, 0x99, 0x6b, 0xd4, 0x1a, 0xc3, 0x25, 0xc3, 0xf1, 0xa4, 0x20, 0x31, 0xea, 0x67, 0x21, 0xcf, 0xc5, 0x90, 0xfa, 0xab, 0xc, 0xc4, 0x80, 0x40, 0x79, 0x59, 0x13, 0x9c, 0x3c, 0x48, 0xbd, 0xa3, 0xc2, 0xfe, 0xaf, 0x44, 0x58, 0x6f, 0xc3, 0x40, 0xec, 0x7b, 0xd6, 0x1d, 0x44, 0x70, 0x67, 0x89, 0x4f };

// struct rsa_private_descriptor rsa_priv = { sizeof(full_rsa_der), (unsigned char *)&full_rsa_der };
// struct sec_certificate cert_priv = { { { 0x0, 0x0 } }, SEC_MODE_RSA_PRIV, SEC_FLAG_ENCRYPT & SEC_FLAG_DECRYPT, &rsa_priv };

// struct rsa_public_descriptor rsa_pub = { sizeof(public_rsa_n), sizeof(public_rsa_e), (unsigned char *)&public_rsa_n, (unsigned char *)&public_rsa_e };
// struct sec_certificate cert_pub = { { { 0x0, 0x0 } }, SEC_MODE_RSA_PUB, SEC_FLAG_ENCRYPT, &rsa_pub };

/* AES */

// struct secure_descriptor sec_desc = { "abcdabcdabcdabcd", "1234123412341234" };
// struct sec_certificate cert = { .group_addr = { { 0xFF, 0x1E, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x89, 0xAB, 0xCD } },
//                                 .mode = SEC_MODE_AES_CBC,
//                                 .flags = (SEC_FLAG_DECRYPT & SEC_FLAG_ENCRYPT),
//                                 .secure_descriptor = &sec_desc };

// struct secure_descriptor sec_desc_2 = { "ddddaaaaddddaaaa", "1234123412341234" };
// struct sec_certificate cert_2 = { .group_addr = { { 0xFF, 0x1E, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x89, 0xA0, 0x0D } },
//                                   .mode = SEC_MODE_AES_CBC,
//                                   .flags = (SEC_FLAG_DECRYPT & SEC_FLAG_ENCRYPT),
//                                   .secure_descriptor = &sec_desc_2 };

/* CA CERT */

unsigned char pub[] = { 0x4, 0x1c, 0x24, 0x89, 0xd5, 0xaf, 0xd4, 0x57, 0x24, 0xb0, 0x50, 0x31, 0xdf, 0x27, 0x3, 0x75, 0xc8, 0x33, 0x66, 0x94,
                        0xf6, 0x5c, 0xeb, 0xda, 0, 0x1e, 0x1, 0x11, 0x56, 0x12, 0x8f, 0xff, 0x5b };
struct ca_cert ca = { sizeof(pub), pub };

/* RP cert */

uint8_t rp_pub[] = { 0x4, 0x15, 0x1e, 0xd7, 0x94, 0xef, 0x7f, 0x9e, 0x80, 0x9e, 0xf7, 0x6, 0x2f, 0x40, 0xf8, 0x7d, 0x9a, 0xa5, 0x4e, 0x12, 0x1b, 0x51, 0xa1, 0x94, 0xcf, 0x30, 0x7f, 0xda, 0xed, 0x2a, 0x42, 0xa1, 0xff, 0xda, 0xd3, 0x82, 0x70, 0xa, 0x1d, 0x2d, 0xef };
uint8_t rp_priv[] = { 0x8b, 0x40, 0xde, 0xfc, 0x80, 0, 0x3a, 0x67, 0x49, 0x87, 0x2, 0xfa, 0xca, 0x2a, 0xde, 0x45, 0xcc, 0xf8, 0x5e, 0xe0 };
uint8_t rp_signature[] = { 0x30, 0x26, 0x2, 0x11, 0, 0xac, 0x2b, 0x91, 0x8f, 0x1d, 0x8, 0xb1, 0xf, 0x22, 0xfe, 0xa0, 0x6d, 0xa8, 0xa1, 0x59, 0x74, 0x2, 0x11, 0, 0xa0, 0x78, 0x39, 0x6c, 0x1c, 0xec, 0xe2, 0x43, 0x8c, 0x10, 0xb, 0x53, 0xec, 0x9f, 0x51, 0xa0 };

struct ce_certificate rp_private_cert = { .owner_addr = { 0xFE, 0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x02, 0x01, 0x1, 0x1, 0x1 },
                                          .flags = CE_PUB_RP_CERT,
                                          .pub_len = 41,
                                          .priv_len = 20,
                                          .signature_len = 40,
                                          .pub = rp_pub,
                                          .priv = rp_priv,
                                          .signature = rp_signature };

/* CLIENT 3 */

uint8_t c3_pub[] = { 0x4, 0x9b, 0x69, 0x5d, 0x66, 0x45, 0x75, 0x16, 0x9d, 0xa3, 0x59, 0x51, 0x5d, 0x66, 0xe8, 0xa2, 0x6, 0x21, 0x9e, 0x21, 0x8d, 0xa7, 0x6f, 0xec, 0x95, 0x9c, 0x24, 0x39, 0x31, 0xd0, 0x19, 0xaf, 0x82, 0x5a, 0xe0, 0xf, 0x29, 0x9e, 0x4c, 0xa7, 0x16 };
uint8_t c3_priv[] = { 0x12, 0xc6, 0xa3, 0xff, 0xfa, 0x3b, 0xd6, 0x9b, 0x89, 0xb9, 0xc2, 0xa0, 0xb8, 0x96, 0x24, 0x26, 0x10, 0x24, 0xa0, 0x36 };
uint8_t c3_signature[] = { 0x30, 0x25, 0x2, 0x11, 0, 0xe3, 0x18, 0x1a, 0x13, 0xc5, 0x7c, 0x17, 0x4e, 0xb5, 0x88, 0x43, 0xc6, 0xa2, 0x52, 0x82, 0x7d, 0x2, 0x10, 0x13, 0x3d, 0xef, 0x72, 0x50, 0x4f, 0x1a, 0x1, 0x5, 0x9c, 0x7, 0x64, 0x8b, 0x3a, 0x5b, 0xe9 };

struct ce_certificate c3_private_cert = { .owner_addr = { 0xFE, 0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x02, 0x03, 0x3, 0x3, 0x3 },
                                          .flags = CE_PUB_CLIENT_CERT,
                                          .pub_len = 41,
                                          .priv_len = 20,
                                          .signature_len = 39,
                                          .pub = c3_pub,
                                          .priv = c3_priv,
                                          .signature = c3_signature };

/* CLIENT 4 */

uint8_t c4_pub[] = { 0x4, 0xb8, 0xc8, 0xd6, 0x7, 0x67, 0x76, 0x79, 0xa1, 0x7c, 0x2a, 0x38, 0xda, 0x48, 0x9d, 0xe7, 0x44, 0x76, 0x70, 0x7, 0x7b, 0x12, 0xa1, 0x8a, 0x1d, 0xcb, 0xe4, 0xec, 0xbf, 0xd5, 0x20, 0x34, 0x96, 0x64, 0x89, 0x4b, 0x83, 0xa7, 0xec, 0x20, 0xb1 };
uint8_t c4_priv[] = { 0x3b, 0xbc, 0x15, 0xfe, 0x1e, 0x62, 0x9f, 0x28, 0xbf, 0x96, 0x66, 0xc4, 0xa2, 0xa9, 0xb5, 0x85, 0xca, 0xd, 0x36, 0xc };
uint8_t c4_signature[] = { 0x30, 0x24, 0x2, 0x10, 0x2, 0x48, 0x4a, 0x9f, 0x53, 0x78, 0x5e, 0x45, 0xfc, 0xfb, 0xa2, 0x3c, 0x34, 0x38, 0x71, 0xcd, 0x2, 0x10, 0xf, 0xd0, 0x9f, 0xbb, 0xe6, 0x31, 0xa9, 0xec, 0xda, 0x7c, 0x48, 0x36, 0x12, 0xad, 0x26, 0x27 };

struct ce_certificate c4_private_cert = { .owner_addr = { 0xFE, 0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x02, 0x04, 0x4, 0x4, 0x4 },
                                          .flags = CE_PUB_CLIENT_CERT,
                                          .pub_len = 41,
                                          .priv_len = 20,
                                          .signature_len = 38,
                                          .pub = c4_pub,
                                          .priv = c4_priv,
                                          .signature = c4_signature };
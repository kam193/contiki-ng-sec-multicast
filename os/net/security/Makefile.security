# Build Contiki-NG with WolfSSL and WolfCrypt included

# TODO: rename -> move one layer wolfssl more
# TODO: add if check and also check if wolf was autoconfigured 

WOLFSSL = $(CONTIKI)/os/net/security/wolfssl

WOLFSSL_ROOT=wolfssl
SOURCEDIRS+= $(WOLFSSL)
CFLAGS+= -DWOLFSSL_CONTIKI -DWOLFSSL_USER_SETTINGS # -DUSE_WOLFSSL 
CFLAGS+= -DWC_NO_HARDEN -DNO_DSA # without warning - check wtf

WOLFCRYPT_SRC = $(WOLFSSL_ROOT)/wolfcrypt/src
WOLFSSL_SRC = $(WOLFSSL_ROOT)/src

WOLFCRYPT_FILES += 	aes.c \
					asm.c  \
					asn.c  \
					arc4.c  \
					chacha.c  \
					chacha20_poly1305.c  \
					cmac.c  \
					coding.c  \
					compress.c  \
					cpuid.c  \
					curve25519.c  \
					des3.c  \
					dh.c  \
					dsa.c  \
					ecc.c  \
					ecc_fp.c  \
					ed25519.c  \
					error.c  \
					fe_low_mem.c  \
					fe_operations.c  \
					ge_low_mem.c  \
					ge_operations.c  \
					hash.c  \
					hc128.c  \
					hmac.c  \
					idea.c  \
					integer.c  \
					logging.c  \
					md5.c  \
					memory.c  \
					pkcs12.c  \
					pkcs7.c  \
					poly1305.c  \
					pwdbased.c  \
					random.c  \
					ripemd.c  \
					rsa.c  \
					sha.c  \
					sha256.c  \
					sha512.c  \
					sha3.c  \
					signature.c  \
					sp_arm32.c  \
					sp_arm64.c  \
					sp_c32.c  \
					sp_c64.c  \
					sp_int.c  \
					sp_x86_64.c  \
					srp.c  \
					tfm.c  \
					wc_encrypt.c  \
					wc_port.c  \
					wolfevent.c  \
					wolfmath.c 


WOLFSSL_FILES += internal.c \
				tls.c \
				wolfio.c \
				keys.c \
				crl.c \
				ssl.c \
				sniffer.c \
				ocsp.c \
				tls13.c

WOLF_SOURCEFILES = ${addprefix $(WOLFCRYPT_SRC)/, $(WOLFCRYPT_FILES)} ${addprefix $(WOLFSSL_SRC)/, $(WOLFSSL_FILES)}

CONTIKI_SOURCEFILES += $(WOLF_SOURCEFILES)

WOLF_OBJECTDIR = $(OBJECTDIR)/$(WOLFSSL_ROOT)

$(WOLF_OBJECTDIR):
	$(TRACE_MKDIR)
	$(Q)mkdir -p $(OBJECTDIR)/$(WOLFSSL_SRC)
	$(Q)mkdir -p $(OBJECTDIR)/$(WOLFCRYPT_SRC)

$(WOLF_OBJECTDIR)/%.o: %.c | $(WOLF_OBJECTDIR)
	$(TRACE_CC)
	$(Q)$(CC) $(CFLAGS) -MMD -c $< -o $@
	@$(FINALIZE_DEPENDENCY)

# wolfSSL contiki build

# TODO: rename -> move one layer wolfssl more
# TODO: add if check and also check if wolf was autoconfigured 

WOLFSSL = $(CONTIKI)/os/net/security/wolfssl

WOLFSSL_ROOT=wolfssl
SOURCEDIRS+= $(WOLFSSL)
CFLAGS+= -DWOLFSSL_CONTIKI -DWOLFSSL_USER_SETTINGS # -DUSE_WOLFSSL 
CFLAGS+= -DWC_NO_HARDEN -DNO_DSA # without warning - check wtf
#source common to all targets

WOLFCRYPT_SRC = $(WOLFSSL_ROOT)/wolfcrypt/src/
WOLFSSL_SRC = $(WOLFSSL_ROOT)/src/

WOLFSSL_FILES += 	$(WOLFSSL_ROOT)/wolfcrypt/src/aes.c \
					$(WOLFSSL_ROOT)/wolfcrypt/src/asm.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/asn.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/arc4.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/chacha.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/chacha20_poly1305.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/cmac.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/coding.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/compress.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/cpuid.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/curve25519.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/des3.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/dh.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/dsa.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/ecc.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/ecc_fp.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/ed25519.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/error.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/fe_low_mem.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/fe_operations.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/ge_low_mem.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/ge_operations.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/hash.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/hc128.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/hmac.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/idea.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/integer.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/logging.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/md5.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/memory.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/pkcs12.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/pkcs7.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/poly1305.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/pwdbased.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/random.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/ripemd.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/rsa.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/sha.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/sha256.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/sha512.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/sha3.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/signature.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/sp_arm32.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/sp_arm64.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/sp_c32.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/sp_c64.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/sp_int.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/sp_x86_64.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/srp.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/tfm.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/wc_encrypt.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/wc_port.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/wolfevent.c  \
					$(WOLFSSL_ROOT)/wolfcrypt/src/wolfmath.c 

#WOLFCRYPT_ASM_SOURCE_FILES  = $(WOLFSSL_ROOT)/wolfcrypt/src/aes_asm.S


WOLFSSL_FILES += \
    $(WOLFSSL_ROOT)/src/internal.c \
    $(WOLFSSL_ROOT)/src/tls.c \
	$(WOLFSSL_ROOT)/src/wolfio.c \
    $(WOLFSSL_ROOT)/src/keys.c \
    $(WOLFSSL_ROOT)/src/crl.c \
    $(WOLFSSL_ROOT)/src/ssl.c \
    $(WOLFSSL_ROOT)/src/sniffer.c \
    $(WOLFSSL_ROOT)/src/ocsp.c \
    $(WOLFSSL_ROOT)/src/tls13.c

CONTIKI_SOURCEFILES += $(WOLFSSL_FILES)

WOLFSSL_OBJECTDIR = $(OBJECTDIR)/$(WOLFSSL_ROOT)

$(WOLFSSL_OBJECTDIR):
	$(TRACE_MKDIR)
	$(Q)mkdir -p $(OBJECTDIR)/$(WOLFSSL_SRC)
	$(Q)mkdir -p $(OBJECTDIR)/$(WOLFCRYPT_SRC)

$(WOLFSSL_OBJECTDIR)/%.o: %.c | $(WOLFSSL_OBJECTDIR)
	$(TRACE_CC)
	$(Q)$(CC) $(CFLAGS) -MMD -c $< -o $@
	@$(FINALIZE_DEPENDENCY)

# To clear include:

# MODULEDIRS = $(MODULES_REL) ${addprefix $(CONTIKI)/, $(MODULES)}
# UNIQUEMODULES = $(call uniq,$(MODULEDIRS))
# MODULES_SOURCES = ${foreach d, $(UNIQUEMODULES), ${subst ${d}/,,${wildcard $(d)/*.c}}}
# CONTIKI_SOURCEFILES += $(MODULES_SOURCES)


# WOLFSSL_INCLUDE=$(WOLFSSL)/build/include
# WOLFSSL_LIB=$(WOLFSSL)/build/lib
# # CFLAGS += -I$(WOLFSSL_INCLUDE) -L$(WOLFSSL_LIB) -Wl,-rpath=$(WOLFSSL_LIB) -lwolfssl
# CFLAGS += -L/usr/local/lib -Wl,-rpath=/usr/local/lib -lwolfssl


# CPPFLAGS += -DWOLFSSL_CONTIKI
# wolfssl:

# 	echo $(CONTIKI)/build
# 	cd $(WOLFSSL) && ./configure --prefix=/home/user/contiki-ng/build --enable-keygen --enable-ecc --enable-eccencrypt --enable-fpecc --enable-hkdf && make && ls -l src/.libs && make install
# 	# --prefix=$(CONTIKI)/build 
# 	cd $(CURRENT_DIR)

# 	# WOLFSSL_INCLUDE=$(WOLFSSL)/build/include
# 	# WOLFSSL_LIB=$(WOLFSSL)/build/lib
# 	# CFLAGS += -I $(WOLFSSL_INCLUDE) -L$(WOLFSSL_LIB) -Wl,-rpath=$(WOLFSSL_LIB) -lwolfssl

# 	# end wolfSSL contiki build